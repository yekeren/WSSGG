syntax = "proto2";

import "protos/hyperparams.proto";
import "protos/post_process.proto";

message Model {
  extensions 1000 to max;
}

enum EdgeScoring {
  ATTENTION = 1;
  CLASSIFICATION = 2;
  ATTENTION_x_CLASSIFICATION = 3;
}

enum RelationFeatureType {
  ZEROS = 1;
  POINTWISE_ADD = 2;
  POINTWISE_MULT = 3;
  SPATIAL = 4;
  SPATIAL_POINTWISE_ADD = 5;
}

message WSSceneGraph {
  extend Model {
    optional WSSceneGraph ext = 1001;
  }

  // Meta file containing the token to id mapping.
  optional string token_to_id_meta_file = 1;

  // Entity embedding file, data shape=[1 + #entities, dims].
  optional string entity_emb_npy_file = 2;

  // Predicate embedding file, data shape=[1 + #predicates, dims].
  optional string predicate_emb_npy_file = 3;

  // Keep probability of dropout layers.
  optional float dropout_keep_prob = 4 [default = 1.0];

  // Keep probability of attention dropout layers.
  optional float attn_dropout_keep_prob = 5 [default = 1.0];

  // Scale factor of attention.
  optional float attn_scale = 10 [default = 1.0];

  // Hyperparameters for the fully-connected layers.
  optional Hyperparams fc_hyperparams = 6;

  // Entity: number of hidden units.
  optional uint32 entity_hidden_units = 7 [default = 300];

  // Relation: number of hidden units.
  optional uint32 relation_hidden_units = 8 [default = 10];

  // IoU threshold to compute metrics.
  optional float iou_threshold = 9 [default = 0.5];

  // Edge scoring method.
  optional EdgeScoring edge_scoring = 15 [default = ATTENTION_x_CLASSIFICATION];

  // Post processing.
  optional PostProcess post_process = 16;

  // IoU threshold to propogate annotations.
  optional float iou_threshold_to_propogate = 17 [default = 0.5];

  // IoU threshold to propogate annotations.
  optional float iou_threshold_to_propogate_relation = 19 [default = 0.5];

  // Refine iterations.
  optional uint32 n_refine_iteration = 18 [default = 1];

  // If true, the refine process uses sigmoid prediction.
  optional bool refine_use_softmax = 24 [default = false];

  // Weight of the MED loss.
  optional float multiple_entity_detection_loss_weight = 20 [default = 1.0];

  // Weight of the refine loss.
  optional float proposal_refine_loss_weight = 23 [default = 1.0];

  // Weight of the refine loss.
  optional float relation_refine_loss_weight = 28 [default = 1.0];

  // If true, use spatial features.
  optional bool use_spatial_feature = 29 [default = false];

  // Weight of the proposal-proposal relation edge.
  optional float joint_inferring_relation_weight = 32;

  // Dropout keep probability for the relation edges.
  optional float mps_relation_dropout_keep_prob = 33 [default = 1.0];

  // If true, use log probability.
  optional bool use_log_prob = 34 [default = false];
}

message WSSceneGraphRnnRefine {
  extend Model {
    optional WSSceneGraphRnnRefine ext = 1002;
  }

  // Meta file containing the token to id mapping.
  optional string token_to_id_meta_file = 1;

  // Entity embedding file, data shape=[1 + #entities, dims].
  optional string entity_emb_npy_file = 2;

  // Predicate embedding file, data shape=[1 + #predicates, dims].
  optional string predicate_emb_npy_file = 3;

  // Keep probability of dropout layers.
  optional float dropout_keep_prob = 4 [default = 1.0];

  // Keep probability of attention dropout layers.
  optional float attn_dropout_keep_prob = 5 [default = 1.0];

  // Scale factor of attention.
  optional float attn_scale = 10 [default = 1.0];

  // Hyperparameters for the fully-connected layers.
  optional Hyperparams fc_hyperparams = 6;

  // Entity: number of hidden units.
  optional uint32 entity_hidden_units = 7 [default = 300];

  // Relation: number of hidden units.
  optional uint32 relation_hidden_units = 8 [default = 10];

  // IoU threshold to compute metrics.
  optional float iou_threshold = 9 [default = 0.5];

  // Edge scoring method.
  optional EdgeScoring edge_scoring = 15 [default = ATTENTION_x_CLASSIFICATION];

  // Post processing.
  optional PostProcess post_process = 16;

  // IoU threshold to propogate annotations.
  optional float iou_threshold_to_propogate = 17 [default = 0.5];

  // IoU threshold to propogate annotations.
  optional float iou_threshold_to_propogate_relation = 19 [default = 0.5];

  // Refine iterations.
  optional uint32 n_refine_iteration = 18 [default = 1];

  // If true, the refine process uses sigmoid prediction.
  optional bool refine_use_softmax = 24 [default = false];

  // Weight of the MED loss.
  optional float multiple_entity_detection_loss_weight = 20 [default = 1.0];

  // Weight of the refine loss.
  optional float proposal_refine_loss_weight = 23 [default = 1.0];

  // Weight of the refine loss.
  optional float relation_refine_loss_weight = 28 [default = 1.0];

  // If true, use spatial features.
  optional bool use_spatial_feature = 29 [default = false];

  // Weight of the proposal-proposal relation edge.
  optional float joint_inferring_relation_weight = 32;

  // Dropout keep probability for the relation edges.
  optional float mps_relation_dropout_keep_prob = 33 [default = 1.0];

  // Number of RNN layers to use.
  optional uint32 rnn_layers = 34 [default = 1];

  // Number of RNN hidden units.
  optional uint32 rnn_hidden_units = 35 [default = 50];

  // Keep probability of RNN inputs.
  optional float rnn_input_keep_prob = 36 [default = 1.0];

  // Keep probability of RNN outputs.
  optional float rnn_output_keep_prob = 37 [default = 1.0];

  // Keep probability of RNN states.
  optional float rnn_state_keep_prob = 38 [default = 1.0];

  // Beam size for searching the solution.
  optional uint32 beam_size = 39 [default = 5];

  // Maximum triples to retain.
  optional uint32 max_total_size = 40 [default = 100];

  // If true, use log probability.
  optional bool use_log_prob = 41 [default = false];

  // If true, use transformer to contextualize triple features.
  optional bool use_transformer = 42 [default = false];

  // Number of Transformer layers.
  optional uint32 transformer_layers = 43 [default = 1];

  // Dropout probability of the Transformer attention layers.
  optional float transformer_attn_dropout_prob = 44 [default = 0.0];

  // Relation feature type.
  optional RelationFeatureType relation_feature_type = 45 [default = POINTWISE_ADD];
}
